name: 'Weekly report'
on:
  workflow_dispatch:
  schedule:
    - cron: 0 3 * * 1
env:
  MERGE_LABELS: "automerge"
  MERGE_REMOVE_LABELS: "automerge"
  MERGE_METHOD: "squash"
  MERGE_COMMIT_MESSAGE: "Auto Merging Previous PRs"
  MERGE_FORKS: "false"
  MERGE_RETRIES: "6"
  MERGE_RETRY_SLEEP: "10000"
  UPDATE_LABELS: ""
  UPDATE_METHOD: "rebase"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  weekly-report:
    runs-on: ubuntu-latest
    steps:
    - name: listPullRequests
      uses: buildsville/list-pull-requests@v1
      id: list
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        labels: '["automerge"]'
    - name: output
      run: echo '${{ steps.list.outputs.pulls }}'

    # # Merge Any
    # - name: automerge
    #   uses: "pascalgn/automerge-action@v0.12.0"
    #   env:
    #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Checkout workspace
      uses: actions/checkout@master
    # Get date and store as environment variables
    - name: Get and store variables
      run: |
        echo ::set-env name=BRANCH_NAME::$(date +%F)
        echo ::set-env name=WEEK_OF::"Week of $(date '+%B %d, %Y')"
    # Create meeting notes scaffold
    - name: Create weekly notes scaffold file
      run: ./update_notes.sh
        
    # Push changes and set env variable for branch name
    - name: Commit and push notes scaffold to branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
        git config --global user.name $GITHUB_ACTOR
        git checkout -b $BRANCH_NAME
        git add .
        git commit -m "Adds meeting notes scaffold"
        git push --force --set-upstream "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" $BRANCH_NAME
    # Open pull request
    - name: Open pull request for 1:1 notes
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const createPull = await github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: process.env["WEEK_OF"],
            body: "Commit your 1:1 updates",
            head: process.env["BRANCH_NAME"],
            base: "master",
          });
          github.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: createPull.data.number,
            assignees: [
              "whitneyimura",
              "thorrsson"
            ],
          });
          github.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: createPull.data.number,
            assignees: [
              "whitneyimura",
              "thorrsson"
            ],
          });
 
